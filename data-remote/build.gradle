plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

String getAccessToken() {
    def properties = new Properties()
    def tokenFile = project.rootProject.file("local.properties")
    properties.load(tokenFile.newDataInputStream())
    return properties["ACCESS_TOKEN"]
}

android {
    namespace 'com.roland.android.data_remote'
    compileSdk defaultCompileSdkVersion

    defaultConfig {
        minSdk defaultMinSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        debug {
            buildConfigField "String", "ACCESS_TOKEN", getAccessToken()
        }
        release {
            buildConfigField "String", "ACCESS_TOKEN", getAccessToken()
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility javaCompileVersion
        targetCompatibility javaCompileVersion
    }
    kotlinOptions {
        jvmTarget = jvmTargetVersion
    }
}

dependencies {

    // android components
    implementation androidx.core
    implementation androidx.appcompat

    // hilt
    implementation di.hiltAndroid
    kapt di.kapt

    // networking
    implementation network.okHttp
    implementation network.retrofit
    implementation network.retrofitMoshi
    implementation network.moshi
    implementation network.moshiKotlin

    // other modules
    implementation(project(path: ":data-repository"))
    implementation(project(path: ":domain"))

    // paging
    implementation paging.runtime

    // unit testing
    testImplementation test.junit
    testImplementation test.coroutines
    testImplementation test.mockito
}